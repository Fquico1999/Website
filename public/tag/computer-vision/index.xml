<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Vision | Francisco Farinha</title>
    <link>https://Fquico1999.github.io/tag/computer-vision/</link>
      <atom:link href="https://Fquico1999.github.io/tag/computer-vision/index.xml" rel="self" type="application/rss+xml" />
    <description>Computer Vision</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â©2024 Francisco Farinha | [Academic](https://sourcethemes.com/academic/) | [Hugo](https://gohugo.io)</copyright><lastBuildDate>Fri, 05 Jun 2020 15:18:22 -0700</lastBuildDate>
    <image>
      <url>https://Fquico1999.github.io/images/icon_hu59cf491a3a20dd4a23becc20dcebe21e_42632_512x512_fill_lanczos_center_3.png</url>
      <title>Computer Vision</title>
      <link>https://Fquico1999.github.io/tag/computer-vision/</link>
    </image>
    
    <item>
      <title>UBC Open Robotics</title>
      <link>https://Fquico1999.github.io/project/openrobotics/</link>
      <pubDate>Fri, 05 Jun 2020 15:18:22 -0700</pubDate>
      <guid>https://Fquico1999.github.io/project/openrobotics/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;em&gt;The results for the Robocup@Home Education 2020 Online Competition are out! Check out our standing 
&lt;a href=&#34;#result_2020&#34;&gt;below.&lt;/a&gt;&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt;
&lt;a href=&#34;#contrib&#34;&gt;Click here&lt;/a&gt; if you want to skip to my involvement in this team.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.ubcopenrobotics.ca/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UBC Open Robotics&lt;/a&gt; is a student team comprised of 60 students split into three subteams - ArtBot, PianoBot, and Robocup@Home. I am a member of the software team in the RoboCup@Home subteam.&lt;/p&gt;
&lt;p&gt;The objective of RoboCup@Home is to build a household assistant robot that can perform a variety of tasks, including carrying bags, introducing and seating guests at a party, answering a variety of trivia questions and more. Open Robotics is developing a robot to compete in the 2021 
&lt;a href=&#34;https://www.robocupathomeedu.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RoboCup@Home Education Challenge&lt;/a&gt; while in the meantime, our subteam will compete in the 2020 Competition using the Turtlebot 2 as our hardware platform.&lt;/p&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#34;task1&#34;&gt;&lt;/a&gt;
The rules for the 2020 Challenge can be found 
&lt;a href=&#34;https://docs.google.com/document/d/1aNPdZDvf9X4HHF13eSge_eHDP9NmC6UDqeYDM9Xyjcg/edit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, but they boil down to three specific tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Carry My Luggage - Navigation task&lt;/li&gt;
&lt;li&gt;Find My Mates - Vision task&lt;/li&gt;
&lt;li&gt;Receptionist - Speech task&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;carry-my-luggage&#34;&gt;Carry My Luggage&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Goal: The robot helps the operator to carry a bag to the car parked outside&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Starting at a predifined location, the robot has to find the operator and pick up the bag the operator is pointing to. After picking up the bag, the robot needs to indicate that it is ready to follow and then it must follow the operator while facing 4 obstacles along the way (crowd, small object, difficult to see 3D object, small blocked area).&lt;/p&gt;
&lt;h4 id=&#34;find-my-mates&#34;&gt;Find My Mates&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Goal: The robot fetches the information of the party guests for the operator who knows only the names
of the guests.&lt;/em&gt;
&lt;a name=&#34;task3&#34;&gt;&lt;/a&gt;
Knowing only the operator, the robot must identify unknown people and meet those that are waving. Afterwards, it must remember the person and provide a unique description of that person, as well as that person&amp;rsquo;s location, to the operator.&lt;/p&gt;
&lt;h4 id=&#34;receptionist&#34;&gt;Receptionist&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Goal: The robot has to take two arriving guests to the living room, introducing them to each other,
and offering the just-arrived guest an unoccupied place to sit.&lt;/em&gt;
&lt;a name=&#34;contrib&#34;&gt;&lt;/a&gt;
Knowing the host of the party, John, the robot must identify unknown guests, request their names and favourite drinks and then point to an empty seat where the guest can sit.&lt;/p&gt;
&lt;h2 id=&#34;my-contributions&#34;&gt;My Contributions&lt;/h2&gt;
&lt;p&gt;My main contributions have been in speech recognition and in handle segmentation, targeting 
&lt;a href=&#34;#task3&#34;&gt;task 3&lt;/a&gt; and 
&lt;a href=&#34;#task1&#34;&gt;task 1&lt;/a&gt; respectively, however I also worked on facial recognition earlier in the project.&lt;/p&gt;
&lt;h3 id=&#34;speech-recognition&#34;&gt;Speech Recognition&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;You can find this repository 
&lt;a href=&#34;https://github.com/UBC-OpenRobotics/SpeechRecognition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Speech recognition is implemented using 
&lt;a href=&#34;https://github.com/cmusphinx/pocketsphinx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PocketSphinx&lt;/a&gt; which is based on 
&lt;a href=&#34;https://cmusphinx.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CMUSphinx&lt;/a&gt;. Which offers two modes of operation - Keyword Spotting (KWS) and Language Model (LM).&lt;/p&gt;
&lt;h4 id=&#34;kws&#34;&gt;KWS&lt;/h4&gt;
&lt;p&gt;Keyword spotting tries to detect specific keywords or phrases, without imposing any type of grammer rules ontop.
Utilizing keyword spotting requires a .dic file and a .kwslist file.&lt;/p&gt;
&lt;p&gt;The dictionary file is a basic text file that contains all the keywords and their phonetic pronunciation, for instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;BACK	B AE K
FORWARD	F AO R W ER D
FULL	F UH L
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These files can be generated 
&lt;a href=&#34;http://www.speech.cs.cmu.edu/tools/lextool.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;The .kwslist file has each keyword and a certain threshold, more or less corresponding to the length of the word or phrase, as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;BACK /1e-9/
FORWARD /1e-25/
FULL SPEED /1e-20/
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;lm&#34;&gt;LM&lt;/h4&gt;
&lt;p&gt;Language model mode additionally imposes a grammer. To utilize this mode, .dic, .lm and .gram files are needed.&lt;/p&gt;
&lt;p&gt;The dictionary file is the same as in KWS mode.&lt;/p&gt;
&lt;p&gt;The .lm file can be generated, along with the .dic file, from a corpus of text, using 
&lt;a href=&#34;http://www.speech.cs.cmu.edu/tools/lmtool-new.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;generate_corpus.py&lt;/code&gt; script in &lt;code&gt;SpeechRecognition/asr/resources&lt;/code&gt; sifts through the resource files from robocup&amp;rsquo;s GPSRCmdGenerator and creates a corpus. The .dic and .lm files are generated from it by using the above tool.&lt;/p&gt;
&lt;p&gt;Finally, the .gram file specifies the grammer to be imposed. For instance, if the commands we are expecting are always an action followed by an object or person and then a location, it might look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public &amp;lt;rule&amp;gt; = &amp;lt;actions&amp;gt; [&amp;lt;objects&amp;gt;] [&amp;lt;names&amp;gt;] [&amp;lt;locations&amp;gt;];

&amp;lt;actions&amp;gt; = MOVE | STOP | GET | GIVE

&amp;lt;objects&amp;gt; = BOWL | GLASS

&amp;lt;names&amp;gt; = JOE | JOEBOB

&amp;lt;locations&amp;gt; = KITCHEN | BEDROOM

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;handle-segmentation&#34;&gt;Handle Segmentation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;You can find this repository 
&lt;a href=&#34;https://github.com/UBC-OpenRobotics/HandleSegmentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To be able to accurately pick up a bag, the robot must be able to detect where its handle is, as well as some information on how wide it is. To accomplish this, I trained a UNet model to segment images of handles.&lt;/p&gt;
&lt;p&gt;UNet models are models that take as input an image and output a mask defining a region of interest. Producing data for these models requires labelling regions of interest on a variety of images. For that purpose I used two tools - 
&lt;a href=&#34;http://labelme.csail.mit.edu/Release3.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LableMe&lt;/a&gt; or in 
&lt;a href=&#34;https://www.makesense.ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MakeSense.ai&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;history.jpg&#39; alt=&#39;training history&#39; width=&#34;700&#34;/&gt;
    &lt;figcaption&gt;Training History for the Handle Segmentation Model&lt;/figcaption&gt;
&lt;/figure&gt; 
&lt;p&gt;After training, model inference on the test set was promising.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;handle_prediction_good.jpg&#39; alt=&#39;Test set inference&#39; width=&#34;800&#34;/&gt;
    &lt;figcaption&gt;Model Inference on Test Set: input image on the left, model prediction in the center and ground truth on the right&lt;/figcaption&gt;
&lt;/figure&gt; 
&lt;p&gt;Additionally, some processing was done on the mask to obtain candidates for the apex of the handle, and its width. This allowed the model to output where the arm should grasp, like the sequence below. Additional work will be done to integrate the RGBD depth layer to obtain a depth location of the handle.&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;result_2020&#34;&gt;&lt;/a&gt;




  
  





  





  


&lt;video autoplay loop &gt;
  &lt;source src=&#34;https://Fquico1999.github.io/img/openrobotics_handleseg.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&#34;2020-robocuphome-education-online-challenge&#34;&gt;2020 RoboCup@Home Education Online Challenge&lt;/h2&gt;
&lt;p&gt;We (the software subteam) participated in the 2020 Online Challenge since it is the team&amp;rsquo;s goal to develop our own hardware platform for 2021. Meanwhile, we put our software progress to the test on the Turtlebot2 platform.&lt;/p&gt;
&lt;p&gt;Out of 8 finalists, we ended up in second place in the open category (meaning open hardware category), and first place in people&amp;rsquo;s choice.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;openrobotics_finals_open_plat.png&#39; alt=&#39;open_category_finish&#39; width=&#34;700&#34;/&gt;
&lt;/figure&gt; 
&lt;figure&gt;
    &lt;img src=&#39;openrobotics_finals_peoples_choice.png&#39; alt=&#39;peoples_choice_finish&#39; width=&#34;700&#34;/&gt;
&lt;/figure&gt; </description>
    </item>
    
    <item>
      <title>Machine Learning Competition</title>
      <link>https://Fquico1999.github.io/project/enph353/</link>
      <pubDate>Fri, 05 Jun 2020 15:18:04 -0700</pubDate>
      <guid>https://Fquico1999.github.io/project/enph353/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;ENPH 353 is a project course designed to teach machine learning techinques with an end-of-term competition. The premise of the competition is to develop algorithms that allow a simulated robot to traverse a parking lot and correctly identify locations and number plates of parked cars while avoiding pedestrians and a moving vehicle. The simulation took place in 
&lt;a href=&#34;http://gazebosim.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gazebo&lt;/a&gt; in 
&lt;a href=&#34;https://www.ros.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ROS&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-competition&#34;&gt;The Competition&lt;/h2&gt;
&lt;p&gt;The image above shows the parking lot for the competition. The robot is the white, square car. It&amp;rsquo;s task is to drive on the roads while collecting the license plates on the blue rectangular cars. Additionally, it must avoid pedestrians and the truck driving around the inside track.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;license_plate.png&#39; alt=&#39;license plate&#39; width=&#34;200&#34;/&gt;
    &lt;figcaption&gt;Example license plate&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The license plates hold two pieces of information, the position of the car marked with the larger P1 above, and a BC auto-generated license plate with two letters and two numbers.&lt;/p&gt;
&lt;p&gt;The inputs to the system were the images captured by a camera mounted on the robot&amp;rsquo;s frame and as outputs the robot would publish velociy commands to guide the robot as well as positions and license plate data to a server for scoring.&lt;/p&gt;
&lt;p&gt;The scores are determined by the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Rules&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Points&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Correctly record license plate and position for a car on outside track&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Correctly record license plate and position for a car on inside track&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;More than two wheels outside of the track&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Collide with white pick-up truck&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hit pedestrian&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Drive one full loop around the outer track&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;the-strategy&#34;&gt;The Strategy&lt;/h2&gt;
&lt;h3 id=&#34;yolo&#34;&gt;YOLO&lt;/h3&gt;
&lt;p&gt;I decided to use the 
&lt;a href=&#34;https://pjreddie.com/darknet/yolo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YOLO&lt;/a&gt; framework to allow the robot to understand it&amp;rsquo;s environment. Yolo stands for &amp;ldquo;You Only Look Once&amp;rdquo;, and is a state of the art object detection system. I used YOLOv3 to obtain labeled bounding boxes around classes of interest, namely the blue parked cars, pedestrians, the truck, and license plates.&lt;/p&gt;
&lt;p&gt;YOLO works by taking an image and dividing into smaller subsections, and predicting locations and accuracies for bounding boxes of a certain class. The advantage of using YOLO is that it is incredibly fast compared to other classifier models, allowing us to obtain near real-time predictions.&lt;/p&gt;
&lt;p&gt;Training the model required around 200 labeled images taken from simulation video, trained for about 25000 iterations. In ROS, a node subscribes to the camera feed and passes the images through yolo. A YoloElement message was made to store each bounding box for each class, and publish it to a yolo node. This node informs pedestrian logic and gives bounding boxes for the license plate detection as well.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;yolo.png&#39; alt=&#39;yolo output&#39; width=&#34;600&#34;/&gt;
    &lt;figcaption&gt;YOLO Output - The robot is waiting at the cross section. It detects the pedestrian as well as the car and license plate ahead.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;navigation&#34;&gt;Navigation&lt;/h3&gt;
&lt;p&gt;The main components of the robot&amp;rsquo;s navigation are the driver and controller.&lt;/p&gt;
&lt;h4 id=&#34;driver&#34;&gt;Driver&lt;/h4&gt;
&lt;p&gt;The essential method for Karenâs driving was &lt;code&gt;get_twist()&lt;/code&gt;. This method used computer vision techniques to return a Twist command (Twist is a message that contains all the velocities of the robot) which would be called by the controller to drive the robot. The driver has three main approaches to following the road.&lt;/p&gt;
&lt;p&gt;The first two approaches are very similar. The robot can follow the road by either looking at the right edge or the left edge of the road and following it. These approaches are mirror, so the following is a list of steps taken to perform right edge following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Scale input image to a smaller size and apply HSV mask to filter out the road.&lt;/li&gt;
&lt;li&gt;Find the first pixel of a road from the right-hand side at an upper and lower location.&lt;/li&gt;
&lt;li&gt;Compare these pixel locations to the expected locations to determine the current error.&lt;/li&gt;
&lt;li&gt;If the error magnitude exceeds a threshold, turn left if the error is negative, or right if the error is positive, otherwise, drive straight.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#39;driver_1.png&#39; alt=&#39;yolo output&#39; width=&#34;300&#34;/&gt;
    &lt;figcaption&gt;Driving Straight - the relative difference in white lines is within the threshold.&lt;/figcaption&gt;
    &lt;img src=&#39;driver_2.png&#39; alt=&#39;yolo output&#39; width=&#34;300&#34;/&gt;
    &lt;figcaption&gt;Left Turn - the relative difference causes a negative error, robot will turn left.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This method was found to be robust. Even when starting off the road, the robot will turn and navigate towards the road, and begin following the edge. However, general navigation and knowing which way to drive is not solved by this approach. The controller must solve these challenges. Note, to follow the left edge, the white lines are flipped about the y-axis in the above figures.&lt;/p&gt;
&lt;p&gt;The third approach of road following is to use the âcenter of massâ of the road. This method is not as robust as the above edge following. However, this approach is necessary when the edges of the road are misleading. This approach follows a similar idea as edge following, except it differs in steps 2 and 3:&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Threshold the image so that the road is a binary mask.&lt;/li&gt;
&lt;li&gt;Use OpenCV to compute the moments of the image, then compare the x coordinate of the center of mass of the road with the center of the image to get the error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In general, each of these approaches could follow the road successfully. It is up to the controller to decide when to use each approach.&lt;/p&gt;
&lt;h4 id=&#34;controller&#34;&gt;Controller&lt;/h4&gt;
&lt;p&gt;The robot&amp;rsquo;s controller makes decisions about when and where to turn, when to stop for pedestrians, and when to stop for the pick-up truck. The following is a flow chart illustrating the state diagram of the controller:&lt;/p&gt;
&lt;p&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; version=&#34;1.1&#34; width=&#34;631px&#34; viewBox=&#34;-0.5 -0.5 631 791&#34; content=&#34;&amp;lt;mxfile host=&amp;quot;app.diagrams.net&amp;quot; modified=&amp;quot;2020-06-12T02:21:46.131Z&amp;quot; agent=&amp;quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36&amp;quot; etag=&amp;quot;NDhWZBUGkTZ4FVD42Wzh&amp;quot; version=&amp;quot;13.2.3&amp;quot; type=&amp;quot;device&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;C5RBs43oDa-KdzZeNtuy&amp;quot; name=&amp;quot;Page-1&amp;quot;&amp;gt;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&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&#34; onclick=&#34;(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;amp;&amp;amp;src.nodeName.toLowerCase()!=&#39;a&#39;){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data==&#39;ready&#39;&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute(&#39;content&#39;)),&#39;*&#39;);window.removeEventListener(&#39;message&#39;,r);}};window.addEventListener(&#39;message&#39;,r);svg.wnd=window.open(&#39;https://app.diagrams.net/?client=1&amp;amp;lightbox=1&amp;amp;edit=_blank&#39;);}}})(this);&#34; style=&#34;cursor:pointer;max-width:100%;max-height:791px;&#34;&gt;&lt;defs/&gt;&lt;g&gt;&lt;path d=&#34;M 120 190 L 159.88 190&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 168.88 190 L 159.88 194.5 L 159.88 185.5 Z&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 280 190 L 353.63 190&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 358.88 190 L 351.88 193.5 L 353.63 190 L 351.88 186.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;170&#34; y=&#34;160&#34; width=&#34;110&#34; height=&#34;60&#34; rx=&#34;9&#34; ry=&#34;9&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 190px; margin-left: 171px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Exit T-Intersection&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;225&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Exit T-Intersection&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 415 160 L 415 86.37&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 81.12 L 418.5 88.12 L 415 86.37 L 411.5 88.12 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 220 L 415 240 L 415 230 L 415 243.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 248.88 L 411.5 241.88 L 415 243.63 L 418.5 241.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;360&#34; y=&#34;160&#34; width=&#34;110&#34; height=&#34;60&#34; rx=&#34;9&#34; ry=&#34;9&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 190px; margin-left: 361px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Right Edge Follow Perimeter&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Right Edge Follow&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 350 40 L 320 40 L 320 180 L 353.63 180&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 358.88 180 L 351.88 183.5 L 353.63 180 L 351.88 176.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 31px; margin-left: 331px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; &#34;&gt;No&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;331&#34; y=&#34;34&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;11px&#34; text-anchor=&#34;middle&#34;&gt;No&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 480 40 L 500 40 L 490 40 L 503.63 40&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 508.88 40 L 501.88 43.5 L 503.63 40 L 501.88 36.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 0 L 480 40 L 415 80 L 350 40 Z&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 40px; margin-left: 351px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;See Pedestrian?&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;44&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;See Pedestrian?&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 570 70 L 570 175 L 476.37 175&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 471.12 175 L 478.12 171.5 L 476.37 175 L 478.12 178.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;510&#34; y=&#34;10&#34; width=&#34;120&#34; height=&#34;60&#34; rx=&#34;9&#34; ry=&#34;9&#34; fill=&#34;#e1d5e7&#34; stroke=&#34;#9673a6&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 40px; margin-left: 511px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Wait Untill Crossed&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;570&#34; y=&#34;44&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Wait Untill Crossed&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 570 70 L 570 70&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 570 70 L 570 70 L 570 70 L 570 70 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;470&#34; y=&#34;20&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 30px; margin-left: 490px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;Yes&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;490&#34; y=&#34;34&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Yes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 490 295 L 570 295 L 570 205 L 476.37 205&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 471.12 205 L 478.12 201.5 L 476.37 205 L 478.12 208.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 340 L 415 373.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 378.88 L 411.5 371.88 L 415 373.63 L 418.5 371.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 250 L 490 295 L 415 340 L 340 295 Z&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 295px; margin-left: 341px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;CollectedÂ  Last &lt;br /&gt;Perimiter License &lt;br /&gt;Plate?&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;299&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;CollectedÂ  Last&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;500&#34; y=&#34;278&#34; width=&#34;30&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 288px; margin-left: 515px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;No&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;515&#34; y=&#34;292&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;No&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;380&#34; y=&#34;350&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 360px; margin-left: 400px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;Yes&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;400&#34; y=&#34;364&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Yes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 415 440 L 415 460 L 415 440 L 415 453.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 458.88 L 411.5 451.88 L 415 453.63 L 418.5 451.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 355 410 L 265 410 L 265 453.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; stroke-dasharray=&#34;3 3&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 265 458.88 L 261.5 451.88 L 265 453.63 L 268.5 451.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;355&#34; y=&#34;380&#34; width=&#34;120&#34; height=&#34;60&#34; rx=&#34;9&#34; ry=&#34;9&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 410px; margin-left: 356px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Left Edge Follow&lt;br /&gt;(Enter Inner Track)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;414&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Left Edge Follow&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 455 500 L 510 500 L 510 410 L 481.37 410&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 476.12 410 L 483.12 406.5 L 481.37 410 L 483.12 413.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 540 L 415 573.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 578.88 L 411.5 571.88 L 415 573.63 L 418.5 571.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 460 L 455 500 L 415 540 L 375 500 Z&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 500px; margin-left: 376px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;In Inner&lt;br /&gt;Ring?&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;504&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;In Inner&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;462&#34; y=&#34;482&#34; width=&#34;30&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 492px; margin-left: 477px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;No&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;477&#34; y=&#34;496&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;No&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 415 610 L 415 630 L 415 620 L 415 633.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 638.88 L 411.5 631.88 L 415 633.63 L 418.5 631.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 355 587.5 L 265 587.5 L 265 546.37&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 265 541.12 L 268.5 548.12 L 265 546.37 L 261.5 548.12 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;355&#34; y=&#34;580&#34; width=&#34;120&#34; height=&#34;30&#34; rx=&#34;4.5&#34; ry=&#34;4.5&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 595px; margin-left: 356px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Follow Road CM&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;599&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Follow Road CM&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;384&#34; y=&#34;550&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 560px; margin-left: 404px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;Yes&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;404&#34; y=&#34;564&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Yes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 415 730 L 415 750 L 415 740 L 415 753.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 415 758.88 L 411.5 751.88 L 415 753.63 L 418.5 751.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 480 685 L 510 685 L 510 595 L 481.37 595&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 476.12 595 L 483.12 591.5 L 481.37 595 L 483.12 598.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 415 640 L 480 685 L 415 730 L 350 685 Z&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 685px; margin-left: 351px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;CollectedÂ  Last &lt;br /&gt;Perimiter License &lt;br /&gt;Plate?&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;689&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;CollectedÂ  Last&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 392.5 760 L 437.5 760 L 460 775 L 437.5 790 L 392.5 790 L 370 775 Z&#34; fill=&#34;#f8cecc&#34; stroke=&#34;#b85450&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 775px; margin-left: 371px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Finished&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;415&#34; y=&#34;779&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Finished&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;479&#34; y=&#34;661&#34; width=&#34;30&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 671px; margin-left: 494px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;No&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;494&#34; y=&#34;675&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;No&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;380&#34; y=&#34;730&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 740px; margin-left: 400px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;Yes&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;400&#34; y=&#34;744&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Yes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 220 500 L 200 500 L 200 487.5 L 186.37 487.5&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; stroke-dasharray=&#34;3 3&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 181.12 487.5 L 188.12 484 L 186.37 487.5 L 188.12 491 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 265 460 L 310 500 L 265 540 L 220 500 Z&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 500px; margin-left: 221px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Truck Close?&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;265&#34; y=&#34;504&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Truck Close?&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 130 475 L 130 395 L 348.63 395&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; stroke-dasharray=&#34;3 3&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 353.88 395 L 346.88 398.5 L 348.63 395 L 346.88 391.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 130 525 L 130 600 L 348.63 600&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 353.88 600 L 346.88 603.5 L 348.63 600 L 346.88 596.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;80&#34; y=&#34;475&#34; width=&#34;100&#34; height=&#34;50&#34; rx=&#34;7.5&#34; ry=&#34;7.5&#34; fill=&#34;#e1d5e7&#34; stroke=&#34;#9673a6&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 500px; margin-left: 81px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;Wait Untill Gone&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;130&#34; y=&#34;504&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Wait Untill Gone&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;194&#34; y=&#34;475&#34; width=&#34;40&#34; height=&#34;20&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 485px; margin-left: 214px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; &#34;&gt;Yes&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;214&#34; y=&#34;489&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Yes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 220 500 L 210 500 Q 200 500 200 506.25 L 200 509.38 Q 200 512.5 193.18 512.5 L 186.37 512.5&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 181.12 512.5 L 188.12 509 L 186.37 512.5 L 188.12 516 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 30 150 L 90 150 L 120 190 L 90 230 L 30 230 L 0 190 Z&#34; fill=&#34;#d5e8d4&#34; stroke=&#34;#82b366&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 190px; margin-left: 1px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;span&gt;Initialize YOLO&lt;br /&gt;Â and License Plate Reader&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;60&#34; y=&#34;194&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;12px&#34; text-anchor=&#34;middle&#34;&gt;Initialize YOLO&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;switch&gt;&lt;g requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;/&gt;&lt;a transform=&#34;translate(0,-5)&#34; xlink:href=&#34;https://desk.draw.io/support/solutions/articles/16000042487&#34; target=&#34;_blank&#34;&gt;&lt;text text-anchor=&#34;middle&#34; font-size=&#34;10px&#34; x=&#34;50%&#34; y=&#34;100%&#34;&gt;Viewer does not support full SVG 1.1&lt;/text&gt;&lt;/a&gt;&lt;/switch&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;h3 id=&#34;position-and-license-plate-recognition&#34;&gt;Position and License Plate Recognition&lt;/h3&gt;
&lt;h4 id=&#34;license-plates&#34;&gt;License Plates&lt;/h4&gt;
&lt;p&gt;The algorithm takes cropped license plate images based on bounding box predictions from YOLO and does some preprocessing before passing them into a CNN for character recognition.&lt;/p&gt;
&lt;p&gt;The preprocessing algorithm takes bounding boxes from &lt;em&gt;/yolo&lt;/em&gt; with the license plate class and crops the raw camera image to size. We obtain potential characters using and adaptive threshold followed by cv2&amp;rsquo;s &lt;code&gt;findContours()&lt;/code&gt; function. After some filtering based on size and aspect ratio, we end up with four predictions. The ordering of characters is determined based on the x position of the bounding box prediction.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;lp_recon.png&#39; alt=&#39;license plate recognition&#39; width=&#34;400&#34;/&gt;
    &lt;figcaption&gt;License Plate Recognition - After adaptive thresholding, findContours yields potential character candidates that are filtered producing the final 4 characters seen.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&#34;position&#34;&gt;Position&lt;/h4&gt;
&lt;p&gt;To read the positions of each license plate, a region of interest is defined based on the bounding box around the license plate from YOLO. To perform character recognition, the CNN is used again, trained on data collected from allowing the robot to do several laps around the perimeter.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#39;positions.jpg&#39; alt=&#39;position recognition&#39; width=&#34;400&#34;/&gt;
    &lt;figcaption&gt;Examples of positions after cropping to ROI&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;p&gt;A total of 20 teams competed in this competition. This model was one of four to receive a perfect score of 57 points.&lt;/p&gt;




  
  





  





  


&lt;video controls &gt;
  &lt;source src=&#34;https://Fquico1999.github.io/img/enph353_outer_ring.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;p&gt;The video above shows the robot completing the outer ring. The Gazebo simulation is shown on the right, the scoring server is on the bottom left, and the terminal displaying information about the robot is on the upper left.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
